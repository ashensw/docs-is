name: Full Site Link Checker

on:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:
    inputs:
      websiteUrl:
        description: 'Base URL of the website to check'
        required: true
        default: 'https://your-website.com'

jobs:
  link-checker:
    name: Link Checker
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      BASE_URL: ${{ github.event.inputs.websiteUrl }}
    steps:
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Setup Environment
        run: |
          pip3 install git+https://github.com/linkchecker/linkchecker.git
          mkdir ./logs

      - name: Sanitize URL for Filename
        id: sanitize
        run: echo "::set-output name=filename::$(echo $BASE_URL | sed 's/[^a-zA-Z0-9]/_/g')"

      - name: Check Links on Entire Website
        run: |
          linkchecker \
            --no-warnings \
            -t 200 \
            -o html \
            --ignore-url ^http://localhost \
            --ignore-url ^https://localhost \
            --ignore-url ^https://wso2\.org/claims \
            --ignore-url ^http://schemas \
            --ignore-url ^http://urn:oasis:names:tc:SAML: \
            --ignore-url ^mailto: \
            --ignore-url /internal/* \
            --ignore-url /some_other_directory/~.* \
            --ignore-url /*\.extension \
            --check-extern \
            $BASE_URL > ./logs/${{ steps.sanitize.outputs.filename }}.html


      - name: Process Link Log
        if: always()
        continue-on-error: true
        run: |
          SUMMARY=$(awk '/\d* warnings found/' ./logs/${{ steps.sanitize.outputs.filename }}.html)
          echo "LC_SUMMARY=$SUMMARY" >> $GITHUB_ENV
          echo $SUMMARY
          cat $GITHUB_ENV

      - name: Upload Artifact Logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: link-check-report.html
          path: ./logs/${{ steps.sanitize.outputs.filename }}.html
