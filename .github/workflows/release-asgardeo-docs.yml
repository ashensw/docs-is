name: Asgardeo Docs Release

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'VERSION'  # This will ignore changes only to the VERSION file.
  workflow_dispatch:

env:  # Global environment variables
  GITHUB_TOKEN: ${{ secrets.IAM_DOCS_GITHUB_BOT_TOKEN }}
  GIT_ORG_NAME: ${{ secrets.GIT_ORG_NAME }}
  GIT_REPO_NAME: ${{ secrets.GIT_REPO_NAME }}
  GIT_BRANCH_NAME: ${{ secrets.GIT_BRANCH_NAME }}

jobs:
  release-asgardeo-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Update Downstream Repository Version
        run: |
          set -euxo pipefail
          VERSION_FILE_PATH=docs-is/VERSION
          echo "VERSION_FILE_PATH: $VERSION_FILE_PATH"
          VERSION_LINE_PREFIX='GITHUB_RELEASE_TAG: v' # Line prefix to identify the version line

          # Clone the downstream repository
          git clone "https://github.com/$GIT_ORG_NAME/docs-is.git"
          cd docs-is
          git checkout $GIT_BRANCH_NAME

          # Extracting the current version line from the YAML file
          CURRENT_VERSION_LINE=$(grep "$VERSION_LINE_PREFIX" "$VERSION_FILE_PATH")

          # Replacing the current version line with the new version line
          NEW_VERSION_LINE="${VERSION_LINE_PREFIX}${{ env.NEW_VERSION }}"
          sed -i "s|$CURRENT_VERSION_LINE|$NEW_VERSION_LINE|" "$VERSION_FILE_PATH"

          # Verifying if the file has changed, and if so, committing and pushing it
        shell: bash
